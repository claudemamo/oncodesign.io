<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mule Zeromq Transport on On Code &amp; Design</title>
    <link>http://oncodesign.io/tags/mule-zeromq-transport/</link>
    <description>Recent content in Mule Zeromq Transport on On Code &amp; Design</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 27 Aug 2013 17:36:00 +0000</lastBuildDate>
    
	<atom:link href="http://oncodesign.io/tags/mule-zeromq-transport/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bridging Mule and MSMQ with ZeroMQ</title>
      <link>http://oncodesign.io/2013/08/27/bridging-mule-and-msmq-with-zeromq/</link>
      <pubDate>Tue, 27 Aug 2013 17:36:00 +0000</pubDate>
      
      <guid>http://oncodesign.io/2013/08/27/bridging-mule-and-msmq-with-zeromq/</guid>
      <description>Hearing the words Mule and Microsoft&amp;rsquo;s MSMQ in the same sentence sends a shiver down my spine. I remember once, Mule guru John D&amp;rsquo;Emic and me had spent a considerable amount of time and patience getting Mule and MSMQ to talk to each other through DCOM. The major factor that contributed to this unpleasant experience was our ignorance of the numerous security measures imposed by Windows to restrict DCOM access. The morale of this story is unless you have a veteran Windows administrator at your disposal, avoid the DCOM route.</description>
    </item>
    
    <item>
      <title>Mule ZeroMQ Transport: Lightweight RPC with ØMQ and Protocol Buffers</title>
      <link>http://oncodesign.io/2012/11/06/mule-zeromq-transport-lightweight-rpc-with-0mq-and-protocol-buffers/</link>
      <pubDate>Tue, 06 Nov 2012 22:12:00 +0000</pubDate>
      
      <guid>http://oncodesign.io/2012/11/06/mule-zeromq-transport-lightweight-rpc-with-0mq-and-protocol-buffers/</guid>
      <description>Check out John D&amp;rsquo;Emic&amp;rsquo;s awesome&amp;nbsp;blog post demonstrating how&amp;nbsp;ØMQ and Mule could be used for exchanging stock quote data between a front-end and back-end application.</description>
    </item>
    
    <item>
      <title>Mule meet ZeroMQ. ZeroMQ meet Mule.</title>
      <link>http://oncodesign.io/2012/06/24/mule-meet-zeromq.-zeromq-meet-mule./</link>
      <pubDate>Sun, 24 Jun 2012 19:17:00 +0000</pubDate>
      
      <guid>http://oncodesign.io/2012/06/24/mule-meet-zeromq.-zeromq-meet-mule./</guid>
      <description>These past few weeks I&#39;ve been experimenting with ZeroMQ&amp;nbsp;(a.k.a. ØMQ or ZMQ). I like the idea of a library that provides you the building blocks for constructing your own messaging architecture. For example, we may want to send messages to an application that might be unavailable at times. In our system, losing some messages isn&#39;t the end of the world so we don&#39;t need to have a high degree of message reliability.</description>
    </item>
    
  </channel>
</rss>