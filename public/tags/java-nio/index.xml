<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java Nio on On Code &amp; Design</title>
    <link>http://oncodesign.io/tags/java-nio/</link>
    <description>Recent content in Java Nio on On Code &amp; Design</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 23 Dec 2013 11:38:00 +0000</lastBuildDate>
    
	<atom:link href="http://oncodesign.io/tags/java-nio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Log4j 2 Memory-Mapped File Appender</title>
      <link>http://oncodesign.io/2013/12/23/log4j-2-memory-mapped-file-appender/</link>
      <pubDate>Mon, 23 Dec 2013 11:38:00 +0000</pubDate>
      
      <guid>http://oncodesign.io/2013/12/23/log4j-2-memory-mapped-file-appender/</guid>
      <description>During the weekend I dug into Java NIO, specifically, mapping files to memory to reduce I/O time. What&amp;rsquo;s more, since I had a lot of free time on my hands, I developed a&amp;nbsp;Log4j 2&amp;nbsp;memory-mapped file appender. On my machine, performance tests running on a single thread using the MemoryMappedFile appender show an improvement by a factor of 3 when compared to the&amp;nbsp;RandomAccessFile&amp;nbsp;appender.</description>
    </item>
    
  </channel>
</rss>