<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>How To on On Code &amp; Design</title>
    <link>http://oncodesign.io/tags/how-to/</link>
    <description>Recent content in How To on On Code &amp; Design</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 20 Dec 2012 22:17:00 +0000</lastBuildDate>
    
	<atom:link href="http://oncodesign.io/tags/how-to/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Demystifying Apache CXF: A RESTful Hello World App</title>
      <link>http://oncodesign.io/2012/12/20/demystifying-apache-cxf-a-restful-hello-world-app/</link>
      <pubDate>Thu, 20 Dec 2012 22:17:00 +0000</pubDate>
      
      <guid>http://oncodesign.io/2012/12/20/demystifying-apache-cxf-a-restful-hello-world-app/</guid>
      <description>The first post&amp;nbsp;of this&amp;nbsp;how-to&amp;nbsp;series showed you what it takes to expose a Hello World application as a SOAP over HTTP Web Service using CXF. For this post, I&amp;rsquo;ll show you how to expose the same app as a RESTful service.
In the Java world, we use JAX-RS for mapping a class to a RESTful service. Giving a RESTful interface to our Hello World app is just a matter of adding JAX-RS annotations to HelloWorldImpl:</description>
    </item>
    
    <item>
      <title>Demystifying Apache CXF: A Hello World App</title>
      <link>http://oncodesign.io/2012/12/19/demystifying-apache-cxf-a-hello-world-app/</link>
      <pubDate>Wed, 19 Dec 2012 07:56:00 +0000</pubDate>
      
      <guid>http://oncodesign.io/2012/12/19/demystifying-apache-cxf-a-hello-world-app/</guid>
      <description>&amp;ldquo;CXF scares the sh**t out of me!&amp;rdquo;.&amp;nbsp;This was a client&amp;rsquo;s comment during our discussion on&amp;nbsp;Apache CXF and I think it&amp;rsquo;s a feeling shared by many. This feeling usually arises from a complaint I hear on CXF: the lack of documentation. However, I suspect that CXF&amp;rsquo;s flexibility confuses numerous newbies and therefore contributes to the negative feelings towards it.&amp;nbsp;The bad news is that, for some, it&amp;rsquo;s hard to live without CXF. Popular open source software such as Apache Camel, Mule, and JBoss AS rely on CXF for their out-of-the-box web service support.</description>
    </item>
    
  </channel>
</rss>