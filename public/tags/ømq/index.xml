<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ømq on On Code &amp; Design</title>
    <link>http://oncodesign.io/tags/%C3%B8mq/</link>
    <description>Recent content in Ømq on On Code &amp; Design</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 27 Jan 2013 17:22:00 +0000</lastBuildDate>
    
	<atom:link href="http://oncodesign.io/tags/%C3%B8mq/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ReplyTo in ZeroMQ using WS-Addressing</title>
      <link>http://oncodesign.io/2013/01/27/replyto-in-zeromq-using-ws-addressing/</link>
      <pubDate>Sun, 27 Jan 2013 17:22:00 +0000</pubDate>
      
      <guid>http://oncodesign.io/2013/01/27/replyto-in-zeromq-using-ws-addressing/</guid>
      <description>In my last post, I mentioned how one could leverage SOAP along with WS-Addressing to implement the return address pattern in&amp;nbsp;ØMQ&amp;nbsp;(known in the JMS world as&amp;nbsp;ReplyTo&amp;nbsp;and in the MSMQ world as&amp;nbsp;ResponseQueue). In this post, I&amp;rsquo;ll go into more detail by giving a code example using CXF&amp;rsquo;s ØMQ transport.
Below is a WSDL that is similar in many respects to the WSDL of the previous post:
Like the other WSDL, this one declares that the service has an operation named sayHi.</description>
    </item>
    
    <item>
      <title>Building ZeroMQ for Android</title>
      <link>http://oncodesign.io/2012/08/12/building-zeromq-for-android/</link>
      <pubDate>Sun, 12 Aug 2012 10:16:00 +0000</pubDate>
      
      <guid>http://oncodesign.io/2012/08/12/building-zeromq-for-android/</guid>
      <description>This weekend I ran ZeroMQ on the Android platform. The ZeroMQ website gives instructions on how to build ZeroMQ for Android and (surprise, surprise) I got errors following them. At least I wasn&amp;rsquo;t alone. Fellow blogger Victor was just as lucky as me. He solved these errors, and what&amp;rsquo;s even better, he created a set of scripts which correctly build ZeroMQ for Android. Alas, running &amp;ldquo;make all&amp;rdquo; on the project gave me the following error:</description>
    </item>
    
    <item>
      <title>Mule meet ZeroMQ. ZeroMQ meet Mule.</title>
      <link>http://oncodesign.io/2012/06/24/mule-meet-zeromq.-zeromq-meet-mule./</link>
      <pubDate>Sun, 24 Jun 2012 19:17:00 +0000</pubDate>
      
      <guid>http://oncodesign.io/2012/06/24/mule-meet-zeromq.-zeromq-meet-mule./</guid>
      <description>These past few weeks I&#39;ve been experimenting with ZeroMQ&amp;nbsp;(a.k.a. ØMQ or ZMQ). I like the idea of a library that provides you the building blocks for constructing your own messaging architecture. For example, we may want to send messages to an application that might be unavailable at times. In our system, losing some messages isn&#39;t the end of the world so we don&#39;t need to have a high degree of message reliability.</description>
    </item>
    
  </channel>
</rss>